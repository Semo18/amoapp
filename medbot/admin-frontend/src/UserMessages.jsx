// src/UserMessages.jsx
import { useEffect, useMemo, useRef, useState } from "react";

const API = import.meta.env.VITE_API_BASE;

/**
 * –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –æ–¥–Ω–æ–≥–æ —á–∞—Ç–∞.
 * - –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Å–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ (–ø–æ—Ä—Ü–∏–∏ –ø–æ 20)
 * - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –î–í–£–• —Ä–µ–∂–∏–º–æ–≤ API:
 *   1) –ù–æ–≤—ã–π:  /admin-api/messages?chat_id=&limit=&order=&before_id=&after_id=  // ‚öôÔ∏è
 *   2) –°—Ç–∞—Ä—ã–π:  /admin-api/chats/{chat_id}/messages?limit=&offset=               // ‚öôÔ∏è
 *   –†–µ–∂–∏–º –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ –æ—Ç–≤–µ—Ç—É —Å–µ—Ä–≤–µ—Ä–∞.
 * - üî¥ –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∏–ª—å—Ç—Ä –ø–µ—Ä–∏–æ–¥–∞ (preset/custom), –∏—Å–ø–æ–ª—å–∑—É–µ–º –°–¢–ê–†–´–ô —ç–Ω–¥–ø–æ–π–Ω—Ç,
 *   –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–º–µ–Ω–Ω–æ –æ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç date_from/date_to/period.
 */
export default function UserMessages({
  chatId,
  onBack,
  period,       // üî¥ –ø—Ä–µ—Å–µ—Ç –ø–µ—Ä–∏–æ–¥–∞: day|week|month|this_month|prev_month|custom
  dateFrom,     // üî¥ YYYY-MM-DD (–¥–ª—è custom)
  dateTo,       // üî¥ YYYY-MM-DD (–¥–ª—è custom)
}) {
  const PAGE = 20;                             // —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const [items, setItems] = useState([]);      // –∞–∫–∫—É–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  const [loading, setLoading] = useState(false);     // –∑–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–π –ø–æ—Ä—Ü–∏–∏
  const [hasMore, setHasMore] = useState(true);      // –µ—Å—Ç—å –ª–∏ –µ—â—ë —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∏–∂–µ
  const [error, setError] = useState(null);          // —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ (–µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞)

  // —Ñ–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫
  const [direction, setDirection] = useState("");     // "", "0", "1"
  const [contentType, setContentType] = useState(""); // "", "text", ...
  const [query, setQuery] = useState("");             // —Å—Ç—Ä–æ–∫–∞ –≤–≤–æ–¥–∞
  const [debouncedQ, setDebouncedQ] = useState("");   // —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—ë–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞

  // –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –¥–ª—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞
  const sentinelRef = useRef(null);   // –Ω–∏–∂–Ω–∏–π "—è–∫–æ—Ä—å"
  const observerRef = useRef(null);   // —Å–∞–º IntersectionObserver

  // –∫—É—Ä—Å–æ—Ä—ã + offset –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  const [offset, setOffset] = useState(0);            // ‚öôÔ∏è offset –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ API
  const apiModeRef = useRef("cursor");                // ‚öôÔ∏è "cursor" | "offset"
  const triedModeRef = useRef(false);                 // ‚öôÔ∏è —á—Ç–æ–±—ã –Ω–µ –∑–∞—Ü–∏–∫–ª–∏—Ç—å—Å—è

  const minId = useMemo(
    () => (items.length ? Math.min(...items.map((m) => m.id)) : null),
    [items]
  );
  const maxId = useMemo(
    () => (items.length ? Math.max(...items.map((m) => m.id)) : null),
    [items]
  );

  // üî¥ –µ—Å–ª–∏ –∑–∞–¥–∞–Ω –ø–µ—Ä–∏–æ–¥ (preset –∏–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π custom) ‚Äî —Ä–∞–±–æ—Ç–∞–µ–º —á–µ—Ä–µ–∑ offset-API
  useEffect(() => {
    const isCustom = period === "custom"; // üî¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º
    const hasDates = dateFrom && dateTo;  // üî¥ –æ–±–µ –≥—Ä–∞–Ω–∏—Ü—ã –∑–∞–¥–∞–Ω—ã
    if (period && (!isCustom || (isCustom && hasDates))) {
      apiModeRef.current = "offset"; // üî¥ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å—Ç–∞—Ä—ã–π —ç–Ω–¥–ø–æ–π–Ω—Ç
    } else {
      apiModeRef.current = "cursor"; // üî¥ –∏–Ω–∞—á–µ –º–æ–∂–Ω–æ –ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π
    }
    // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–µ—Ä–∏–æ–¥–∞
    setItems([]);           // üî¥ –æ—á–∏—â–∞–µ–º –ª–µ–Ω—Ç—É
    setHasMore(true);       // üî¥ —Å–Ω–æ–≤–∞ –µ—Å—Ç—å —á—Ç–æ –≥—Ä—É–∑–∏—Ç—å
    setError(null);         // üî¥ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
    setOffset(0);           // üî¥ –æ–±–Ω—É–ª—è–µ–º offset
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [period, dateFrom, dateTo]);

  // –¥–µ–±–∞—É–Ω—Å –ø–æ–∏—Å–∫–∞ (300–º—Å)
  useEffect(() => {
    const t = setTimeout(() => setDebouncedQ(query.trim()), 300);
    return () => clearTimeout(t);
  }, [query]);

  // –ø—Ä–∏ —Å–º–µ–Ω–µ —á–∞—Ç–∞/—Ñ–∏–ª—å—Ç—Ä–æ–≤/–ø–æ–∏—Å–∫–∞ –Ω–∞—á–∏–Ω–∞–µ–º —Å–Ω–∞—á–∞–ª–∞
  useEffect(() => {
    setItems([]);
    setHasMore(true);
    setError(null);
    setOffset(0);                        // ‚öôÔ∏è —Å–±—Ä–∞—Å—ã–≤–∞–µ–º offset –Ω–∞ 0
  }, [chatId, direction, contentType, debouncedQ]);

  // —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Ä—Ü–∏–∏: —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–æ–≤—ã–π API, –ø—Ä–∏ 404/405 ‚Äî —Å—Ç–∞—Ä—ã–π
  async function loadMore() {
    if (loading || !hasMore) return;
    setLoading(true);
    setError(null);

    try {
      // üî¥ –ï—Å–ª–∏ –ø–µ—Ä–∏–æ–¥ –∞–∫—Ç–∏–≤–µ–Ω ‚Äî –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π —ç–Ω–¥–ø–æ–π–Ω—Ç.
      const forceOffset =
        apiModeRef.current === "offset"; // üî¥ —Ñ–ª–∞–≥ –≤—ã–Ω—É–∂–¥–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞

      if (apiModeRef.current === "cursor" && !forceOffset) {
        const params = new URLSearchParams();
        params.set("chat_id", String(chatId));
        params.set("limit", String(PAGE));
        params.set("order", "desc");
        if (minId) params.set("before_id", String(minId));
        if (debouncedQ) params.set("q", debouncedQ);
        if (direction !== "") params.set("direction", direction);
        if (contentType !== "") params.set("content_type", contentType);

        const r = await fetch(`${API}/messages?${params.toString()}`);
        if (r.status === 404 || r.status === 405) {        // ‚öôÔ∏è –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ offset-—Ä–µ–∂–∏–º
          apiModeRef.current = "offset";
          if (!triedModeRef.current) {
            triedModeRef.current = true;
            setLoading(false);
            return loadMore();                              // ‚öôÔ∏è –ø–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
          }
        }
        if (!r.ok) throw new Error(`HTTP ${r.status}`);
        const data = await r.json();
        const batch = Array.isArray(data.items) ? data.items : [];
        setItems((prev) => [...prev, ...batch]);
        setHasMore(Boolean(data.has_more ?? batch.length === PAGE));
      } else {
        // ‚öôÔ∏è —Å—Ç–∞—Ä—ã–π API (—Ç–µ–ø–µ—Ä—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤, –ø–æ–∏—Å–∫–∞ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞)
        const url = new URL(`${API}/chats/${chatId}/messages`);
        url.searchParams.set("limit", String(PAGE));
        url.searchParams.set("offset", String(offset));

        // üî¥ –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã (–±–µ–∫–µ–Ω–¥ —Ç–µ–ø–µ—Ä—å –∏—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç)
        if (debouncedQ) url.searchParams.set("q", debouncedQ);
        if (direction !== "") url.searchParams.set("direction", direction);
        if (contentType !== "") url.searchParams.set("content_type", contentType);

        // üî¥ –¥–æ–±–∞–≤–∏–º –ø–µ—Ä–∏–æ–¥/–¥–∞—Ç—ã (–±—ç–∫–µ–Ω–¥ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ–±–∞ —Å—Ç–∏–ª—è)
        if (period && period !== "custom") {
          url.searchParams.set("period", period); // üî¥ –ø—Ä–µ—Å–µ—Ç
        } else if (period === "custom" && dateFrom && dateTo) {
          url.searchParams.set("date_from", dateFrom); // üî¥ —è–≤–Ω—ã–µ
          url.searchParams.set("date_to", dateTo);     // üî¥ –≥—Ä–∞–Ω–∏—Ü—ã
        }
        // —Å—Ç–∞—Ä—ã–π —ç–Ω–¥–ø–æ–π–Ω—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã
        // –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è/—Ç–∏–ø–∞ ‚Äî –ø–æ—ç—Ç–æ–º—É –∏—Ö –∑–¥–µ—Å—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º.

        const r = await fetch(url.toString());
        if (!r.ok) throw new Error(`HTTP ${r.status}`);
        const data = await r.json();
        const batch = Array.isArray(data.items) ? data.items : data;
        setItems((prev) => [...prev, ...batch]);
        setOffset((prev) => prev + batch.length);          // ‚öôÔ∏è –¥–≤–∏–≥–∞–µ–º offset
        setHasMore(batch.length === PAGE);
      }
    } catch (e) {
      setError(e.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏");
    } finally {
      setLoading(false);
    }
  }

  // –ø–µ—Ä–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ + —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Ñ–∏–ª—å—Ç—Ä—ã (–ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è)
  useEffect(() => {
    if (items.length === 0 && hasMore && !loading) {
      loadMore();
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [items.length, hasMore, loading, chatId, direction, contentType, debouncedQ]);

  // IntersectionObserver –¥–ª—è –Ω–∏–∂–Ω–µ–≥–æ —è–∫–æ—Ä—è
  useEffect(() => {
    if (!sentinelRef.current) return;
    observerRef.current?.disconnect();
    observerRef.current = new IntersectionObserver((entries) => {
      const [entry] = entries;
      if (entry.isIntersecting) loadMore();
    });
    observerRef.current.observe(sentinelRef.current);
    return () => observerRef.current?.disconnect();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [sentinelRef.current, minId, hasMore, direction, contentType, debouncedQ]);

  // —Ä—É—á–Ω–∞—è –ø–æ–¥–≥—Ä—É–∑–∫–∞ ¬´—Å–≤–µ—Ä—Ö—É¬ª ‚Äî –ø–æ—è–≤–∏–ª–æ—Å—å –ª–∏ —á—Ç–æ-—Ç–æ –Ω–æ–≤–µ–µ
  async function refreshNewer() {
    try {
      if (apiModeRef.current === "cursor") {               // ‚öôÔ∏è —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–π API —É–º–µ–µ—Ç after_id/asc
        const params = new URLSearchParams();
        params.set("chat_id", String(chatId));
        params.set("limit", String(PAGE));
        params.set("order", "asc");
        if (maxId) params.set("after_id", String(maxId));
        if (debouncedQ) params.set("q", debouncedQ);
        if (direction !== "") params.set("direction", direction);
        if (contentType !== "") params.set("content_type", contentType);

        const r = await fetch(`${API}/messages?${params.toString()}`);
        if (!r.ok) return;                                  // –≤ offset-—Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å—Ç–æ –º–æ–ª—á–∞ –≤—ã—Ö–æ–¥–∏–º
        const data = await r.json();
        const batch = Array.isArray(data.items) ? data.items : [];
        setItems((prev) => [...batch, ...prev]);
      }
    } catch (_) {
      // –º–æ–ª—á–∞ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    }
  }

  return (
    <div>
      <button
        onClick={onBack}
        style={{
          margin: "12px 0 16px",
          padding: "8px 12px",
          border: "1px solid #e5e7eb",
          borderRadius: 8,
          background: "#fff",
          cursor: "pointer",
        }}
      >
        ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
      </button>

      {/* –ü–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ / –ø–æ–∏—Å–∫–∞ */}
      <div
        style={{
          display: "grid",
          gridTemplateColumns: "1fr 160px 200px 160px",
          gap: 8,
          alignItems: "center",
          marginBottom: 12,
        }}
      >
        <input
          value={query}
          onChange={(e) => setQuery(e.target.value)}
          placeholder="–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É‚Ä¶"
          style={{
            padding: "10px 12px",
            borderRadius: 8,
            border: "1px solid #e5e7eb",
          }}
          disabled={false}  // üî¥ backend —Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã
        />
        <select
          value={direction}
          onChange={(e) => setDirection(e.target.value)}
          style={{
            padding: "10px 12px",
            borderRadius: 8,
            border: "1px solid #e5e7eb",
          }}
          disabled={false}  // üî¥ backend —Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã
        >
          <option value="">–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –≤—Å–µ</option>
          <option value="0">–í—Ö–æ–¥—è—â–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</option>
          <option value="1">–ò—Å—Ö–æ–¥—è—â–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞</option>
        </select>
        <select
          value={contentType}
          onChange={(e) => setContentType(e.target.value)}
          style={{
            padding: "10px 12px",
            borderRadius: 8,
            border: "1px solid #e5e7eb",
          }}
          disabled={false}  // üî¥ backend —Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã
        >
          <option value="">–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: –≤—Å–µ</option>
          <option value="text">text</option>
          <option value="photo">photo</option>
          <option value="voice">voice</option>
          <option value="audio">audio</option>
          <option value="document">document</option>
        </select>

        <button
          onClick={refreshNewer}
          title="–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ (–µ—Å–ª–∏ –ø–æ—è–≤–∏–ª–∏—Å—å)"
          style={{
            padding: "10px 12px",
            borderRadius: 8,
            border: "1px solid #e5e7eb",
            background: "#fff",
            cursor: "pointer",
          }}
          disabled={false}  // üî¥ backend —Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã
        >
          ‚§¥Ô∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ
        </button>
      </div>

      {/* –õ–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π */}
      <div
        style={{
          border: "1px solid #e5e7eb",
          borderRadius: 10,
          padding: 12,
          minHeight: 320,
          maxHeight: "65vh",
          overflowY: "auto",
          background: "#fafafa",
        }}
      >
        {items.length === 0 && !loading && !error && (
          <p style={{ margin: 8, opacity: 0.7 }}>
            –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è.
          </p>
        )}

        {items.map((m) => (
          <Bubble key={`${m.id}-${m.created_at}`} msg={m} />  // üî¥ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á
        ))}

        {error && (
          <p style={{ color: "#b91c1c", marginTop: 8 }}>
            –û—à–∏–±–∫–∞: {String(error)}
          </p>
        )}
        {loading && <p style={{ marginTop: 8, opacity: 0.7 }}>–ó–∞–≥—Ä—É–∂–∞–µ–º‚Ä¶</p>}

        <div ref={sentinelRef} style={{ height: 1 }} />
      </div>
    </div>
  );
}

/** –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å—Ç–∏–ª–µ —á–∞—Ç–∞ */
function Bubble({ msg }) {
  const isOut = Number(msg.direction) === 1;
  const time = new Date(msg.created_at).toLocaleString();

  return (
    <div
      style={{
        display: "flex",
        justifyContent: isOut ? "flex-end" : "flex-start",
        margin: "8px 0",
      }}
      title={`id=${msg.id} ‚Ä¢ ${time}`}
    >
      <div
        style={{
          maxWidth: "70%",
          padding: "10px 12px",
          borderRadius: 12,
          border: "1px solid #e5e7eb",
          background: isOut ? "#e6f4ff" : "#fff",
          boxShadow: "0 1px 2px rgba(0,0,0,0.03)",
          whiteSpace: "pre-wrap",
          wordBreak: "break-word",
        }}
      >
        <div
          style={{
            fontSize: 12,
            opacity: 0.6,
            marginBottom: 6,
            textAlign: isOut ? "right" : "left",
          }}
        >
          {isOut ? "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç" : "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"} ‚Ä¢ {time}
          {msg.content_type && ` ‚Ä¢ ${msg.content_type}`}
        </div>

        {msg.text ? (
          <span>{msg.text}</span>
        ) : (
          <i style={{ opacity: 0.7 }}>
            (–ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
            {msg.attachment_name ? `, –≤–ª–æ–∂–µ–Ω–∏–µ: ${msg.attachment_name}` : ""})
          </i>
        )}
      </div>
    </div>
  );
}
