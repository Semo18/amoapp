# app.py
import os  # –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è (—Å–µ–∫—Ä–µ—Ç—ã –≤–Ω–µ –∫–æ–¥–∞)
import logging  # –∂—É—Ä–Ω–∞–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
from typing import Optional, Dict, Any  # –¥–ª—è Python 3.9
from fastapi import (  # –∫–∞—Ä–∫–∞—Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ —É—Ç–∏–ª–∏—Ç—ã
    FastAPI, Request, HTTPException, Query,
)  # –ø–µ—Ä–µ–Ω–æ—Å –¥–ª—è flake8
from fastapi.middleware.cors import CORSMiddleware  # CORS-–º–∏–¥–ª–≤–∞—Ä—å
from aiogram import Bot, Dispatcher  # Bot ‚Äî –±–æ—Ç, Dispatcher ‚Äî –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è
from aiogram.types import Update  # —Ç–∏–ø –≤—Ö–æ–¥—è—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram
from dotenv import load_dotenv  # –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ .env

from bot import setup_handlers  # noqa: E402  # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤ –ø–æ–∑–∂–µ
from admin_api import router as admin_router  # noqa: E402  # –Ω–∞–±–æ—Ä admin-—Ä–æ—É—Ç–æ–≤
from repo import fetch_messages  # üî¥ –≤—ã–¥–∞—á–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∫–∏

load_dotenv()  # –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env, –µ—Å–ª–∏ –µ—Å—Ç—å

logging.basicConfig(  # –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    level=logging.INFO,  # —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–æ–≤
    format="%(asctime)s %(levelname)s %(name)s: %(message)s",  # —Ñ–æ—Ä–º–∞—Ç
)

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")  # —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET", "secret")  # —Å–µ–∫—Ä–µ—Ç –≤–µ–±—Ö—É–∫–∞
BASE_URL = os.getenv("BASE_URL", "").rstrip("/")  # –±–∞–∑–æ–≤—ã–π URL —Å–µ—Ä–≤–∏—Å–∞

bot = Bot(BOT_TOKEN)  # —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç Telegram-–±–æ—Ç–∞
dp = Dispatcher()  # —Å–æ–∑–¥–∞—ë–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä aiogram

app = FastAPI(title="medbot")  # —ç–∫–∑–µ–º–ø–ª—è—Ä FastAPI

ALLOWED_ORIGINS = [  # —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ —Ö–æ–¥–∏—Ç—å –∫ API –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
    "http://localhost:5173",
    "http://127.0.0.1:5173",
    "https://amo.ap-development.com",
]  # —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ –¥–ª—è CORS

app.add_middleware(  # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º CORS-–º–∏–¥–ª–≤–∞—Ä—å
    CORSMiddleware,  # –∫–ª–∞—Å—Å –º–∏–¥–ª–≤–∞—Ä–∏
    allow_origins=ALLOWED_ORIGINS,  # –∫—Ç–æ –º–æ–∂–µ—Ç
    allow_credentials=True,  # —Ä–∞–∑—Ä–µ—à–∏—Ç—å –∫—É–∫–∏ (–Ω–∞ –±—É–¥—É—â–µ–µ)
    allow_methods=["*"],  # —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    allow_headers=["*"],  # —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
)

# webhook endpoint
@app.post("/webhook")  # –∫—É–¥–∞ Telegram –±—É–¥–µ—Ç —Å–ª–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
async def telegram_webhook(request: Request) -> Dict[str, Any]:  # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–∞
    if request.headers.get("x-telegram-bot-api-secret-token") != WEBHOOK_SECRET:
        raise HTTPException(status_code=403, detail="bad secret")  # –æ—Ç–∫–∞–∑
    data = await request.json()  # —á–∏—Ç–∞–µ–º JSON-—Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
    update = Update.model_validate(data)  # –ø–∞—Ä—Å–∏–º –≤ –æ–±—ä–µ–∫—Ç Update
    await dp.feed_update(bot, update)  # –ø–µ—Ä–µ–¥–∞—ë–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º aiogram
    return {"ok": True}  # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø—Ä–∏—ë–º

@app.get("/health")  # —Å–ª—É–∂–µ–±–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∂–∏–≤–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
async def health() -> Dict[str, str]:  # —Ö—ç–Ω–¥–ª–µ—Ä health
    return {"status": "ok"}  # –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç

# --- –∑–∞–ø—É—Å–∫ aiogram —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤ ---
setup_handlers(dp)  # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ —Ä–µ–∞–∫—Ü–∏–∏ –±–æ—Ç–∞

# --- admin api (–ø–æ–¥–∫–ª—é—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã) ---
app.include_router(admin_router)  # –ø–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä –∞–¥–º–∏–Ω–∫–∏


# --- –ù–û–í–´–ô –≠–ù–î–ü–û–ô–ù–¢: —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ ---
@app.get("/admin-api/messages")  # —ç–Ω–¥–ø–æ–π–Ω—Ç —Å–ø–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫—É—Ä—Å–æ—Ä–∞–º–∏
async def api_messages(  # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    chat_id: int = Query(..., description="ID —á–∞—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω)"),  # –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
    limit: int = Query(20, ge=1, le=200,
                       description="–°–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤–µ—Ä–Ω—É—Ç—å"),  # –ª–∏–º–∏—Ç
    before_id: Optional[int] = Query(  # –∫—É—Ä—Å–æ—Ä ¬´—Å—Ç–∞—Ä–µ–µ —á–µ–º id¬ª
        None, description="–í–µ—Ä–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å id < before_id",
    ),
    after_id: Optional[int] = Query(  # –∫—É—Ä—Å–æ—Ä ¬´–Ω–æ–≤–µ–µ —á–µ–º id¬ª
        None, description="–í–µ—Ä–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å id > after_id",
    ),
    q: Optional[str] = Query(  # –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É
        None, min_length=1, description="–ü–æ–∏—Å–∫ –ø–æ –ø–æ–¥—Å—Ç—Ä–æ–∫–µ (ILIKE)",
    ),
    direction: Optional[int] = Query(  # 0 ‚Äî user‚Üíbot, 1 ‚Äî bot‚Üíuser
        None, ge=0, le=1, description="–§–∏–ª—å—Ç—Ä –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é (0/1)",
    ),
    content_type: Optional[str] = Query(  # —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        None, description="–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: text/voice/photo/document/‚Ä¶",
    ),
    order: str = Query(  # –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        "desc", regex="^(asc|desc)$", description="–ü–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏",
    ),
) -> Dict[str, Any]:  # JSON-–æ—Ç–≤–µ—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Ä—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ (–∫—É—Ä—Å–æ—Ä–Ω–∞—è –ø–∞–≥–∏–Ω–∞—Ü–∏—è)."""
    try:  # –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–±–æ–µ–≤
        data = fetch_messages(  # –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é
            chat_id=chat_id,  # –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
            limit=limit,  # –ª–∏–º–∏—Ç –≤—ã–±–æ—Ä–∫–∏
            before_id=before_id,  # –∫—É—Ä—Å–æ—Ä –≤–Ω–∏–∑
            after_id=after_id,  # –∫—É—Ä—Å–æ—Ä –≤–≤–µ—Ä—Ö
            q=q,  # —Å—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞
            direction=direction,  # —Ñ–∏–ª—å—Ç—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            content_type=content_type,  # —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É
            order=order,  # —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
        )  # –ø–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        return data  # –æ—Ç–¥–∞—ë–º –∫–∞–∫ –µ—Å—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É
    except Exception as exc:  # –ø–µ—Ä–µ—Ö–≤–∞—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        raise HTTPException(status_code=500, detail=str(exc))  # –µ–¥–∏–Ω—ã–π –æ—Ç–≤–µ—Ç


# --- –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ä—É—á–∫–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞ ---
@app.get("/admin/set_webhook")  # –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è
async def set_webhook() -> Dict[str, Any]:  # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ —É Telegram
    if not BASE_URL:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL –∑–∞–¥–∞–Ω
        raise HTTPException(500, "BASE_URL not set")  # –æ—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    await bot.set_webhook(  # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º URL –≤–µ–±—Ö—É–∫–∞
        url=f"{BASE_URL}/webhook",  # –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –∞–¥—Ä–µ—Å
        secret_token=WEBHOOK_SECRET,  # —Å–µ–∫—Ä–µ—Ç –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        drop_pending_updates=True,  # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—á–µ—Ä–µ–¥—å
    )
    return {"ok": True, "url": f"{BASE_URL}/webhook"}  # –æ—Ç–≤–µ—Ç
